[{"D:\\IT\\web\\reactjs\\portfolio\\src\\index.js":"1","D:\\IT\\web\\reactjs\\portfolio\\src\\reportWebVitals.js":"2","D:\\IT\\web\\reactjs\\portfolio\\src\\App.js":"3","D:\\IT\\web\\reactjs\\portfolio\\src\\pages\\Contact\\Contact.js":"4","D:\\IT\\web\\reactjs\\portfolio\\src\\pages\\Resume\\Resume.js":"5","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Profile\\Profile.js":"6","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Footer\\Footer.js":"7","D:\\IT\\web\\reactjs\\portfolio\\src\\pages\\Portfolio\\Portfolio.js":"8","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Header\\Header.js":"9","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Button\\Button.js":"10","D:\\IT\\web\\reactjs\\portfolio\\src\\utils\\resumeData.js":"11","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Timeline\\Timeline.js":"12"},{"size":500,"mtime":1611592050301,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1249,"mtime":1611592287503,"results":"16","hashOfConfig":"14"},{"size":5812,"mtime":1611651865023,"results":"17","hashOfConfig":"14"},{"size":4842,"mtime":1611559325645,"results":"18","hashOfConfig":"14"},{"size":2363,"mtime":1611064818873,"results":"19","hashOfConfig":"14"},{"size":651,"mtime":1611048743970,"results":"20","hashOfConfig":"14"},{"size":4731,"mtime":1611559313708,"results":"21","hashOfConfig":"14"},{"size":2051,"mtime":1611063493716,"results":"22","hashOfConfig":"14"},{"size":411,"mtime":1611581225891,"results":"23","hashOfConfig":"14"},{"size":8304,"mtime":1611563075913,"results":"24","hashOfConfig":"14"},{"size":1298,"mtime":1611651486295,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"amd80w",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IT\\web\\reactjs\\portfolio\\src\\index.js",[],["56","57"],"D:\\IT\\web\\reactjs\\portfolio\\src\\reportWebVitals.js",[],"D:\\IT\\web\\reactjs\\portfolio\\src\\App.js",[],"D:\\IT\\web\\reactjs\\portfolio\\src\\pages\\Contact\\Contact.js",[],"D:\\IT\\web\\reactjs\\portfolio\\src\\pages\\Resume\\Resume.js",[],"D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Profile\\Profile.js",["58","59"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CustomTimeline, { CustomTimelineSeparator } from \"../Timeline/Timeline\";\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport CustomButton from \"../Button/Button\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport \"./Profile.css\";\r\n\r\nconst CustomTimelineItem = ({ title, text, link }) => (\r\n  <TimelineItem>\r\n    <CustomTimelineSeparator />\r\n    <TimelineContent className=\"timeline_content\">\r\n      {link ? (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}:</span>{\" \"}\r\n          <a href={link} target=\"_blank\">\r\n            {text}\r\n          </a>\r\n        </Typography>\r\n      ) : (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}:</span> {text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n);\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className=\"profile container_shadow\">\r\n      <div className=\"profile_name\">\r\n        <Typography className=\"name\">{resumeData.name}</Typography>\r\n        <Typography className=\"title\">{resumeData.title}</Typography>\r\n      </div>\r\n\r\n      <figure className=\"profile_image\">\r\n        <img src={require(\"../../../src/assets/images/h.jpg\").default} />\r\n      </figure>\r\n\r\n      <div className=\"profile_information\">\r\n        <CustomTimeline icon={<PersonOutlineIcon />}>\r\n          <CustomTimelineItem title=\"Name\" text={resumeData.name} />\r\n          <CustomTimelineItem title=\"Birthday\" text={resumeData.birthday} />\r\n          <CustomTimelineItem title=\"Phone\" text={resumeData.phone} />\r\n          <CustomTimelineItem title=\"Email\" text={resumeData.email} />\r\n\r\n          {Object.keys(resumeData.socials).map((key) => (\r\n            <CustomTimelineItem\r\n              title={key}\r\n              text={resumeData.socials[key].text}\r\n              link={resumeData.socials[key].link}\r\n            />\r\n          ))}\r\n        </CustomTimeline>\r\n        <div className=\"button_container\">\r\n          <CustomButton text={\"Download CV\"} icon={<GetAppIcon />} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Footer\\Footer.js",["60"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">{resumeData.name}</Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          &copy; 2021. Designed and Developed by{\" \"}\r\n          <a href=\"#\" target=\"_blank\">\r\n            TonTon\r\n          </a>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\IT\\web\\reactjs\\portfolio\\src\\pages\\Portfolio\\Portfolio.js",["61","62","63","64","65"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  Card,\r\n  Grow,\r\n  Dialog,\r\n} from \"@material-ui/core\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport \"./Portfolio.css\";\r\n\r\nconst Portfolio = () => {\r\n  const [tabValue, setTabValue] = useState(\"All\");\r\n  const [projectDialog, setProjectDialog] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className=\"section pt_30 pb_45\">\r\n        {/* Title */}\r\n        <Grid item className=\"section_title mb_20\">\r\n          <span></span>\r\n          <Typography variant=\"h6\" className=\"section_title_text\">\r\n            Portfolio\r\n          </Typography>\r\n        </Grid>\r\n        {/* Tabs */}\r\n        <Grid item xs={12}>\r\n          <Tabs\r\n            value={tabValue}\r\n            indicatorColor=\"white\"\r\n            className=\"customTabs\"\r\n            onChange={(event, newValue) => setTabValue(newValue)}\r\n          >\r\n            <Tab\r\n              label=\"All\"\r\n              value=\"All\"\r\n              className={\r\n                tabValue == \"All\" ? \"customTabs_item active\" : \"customTabs_item\"\r\n              }\r\n            />\r\n            {[...new Set(resumeData.projects.map((item) => item.tag))].map(\r\n              (tag) => (\r\n                <Tab\r\n                  label={tag}\r\n                  value={tag}\r\n                  className={\r\n                    tabValue == tag\r\n                      ? \"customTabs_item active\"\r\n                      : \"customTabs_item\"\r\n                  }\r\n                />\r\n              )\r\n            )}\r\n          </Tabs>\r\n        </Grid>\r\n        {/* Projects */}\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={3}>\r\n            {resumeData.projects.map((project) => (\r\n              <>\r\n                {tabValue == project.tag || tabValue == \"All\" ? (\r\n                  <Grid item xs={12} sm={6} md={4}>\r\n                    <Grow in timeout={1000}>\r\n                      <Card\r\n                        className=\"customCard\"\r\n                        onClick={() => setProjectDialog(project)}\r\n                      >\r\n                        <CardActionArea>\r\n                          <CardMedia\r\n                            className=\"customCard_image\"\r\n                            image={project.image}\r\n                            title={project.title}\r\n                          />\r\n                          <CardContent>\r\n                            <Typography\r\n                              variant={\"body2\"}\r\n                              className=\"customCard_title\"\r\n                            >\r\n                              {project.title}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant={\"body2\"}\r\n                              className=\"customCard_caption\"\r\n                            >\r\n                              {project.caption}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grow>\r\n                  </Grid>\r\n                ) : null}\r\n              </>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Dialog\r\n          className=\"projectDialog\"\r\n          open={projectDialog}\r\n          onClose={() => setProjectDialog(false)}\r\n          fullWidth\r\n        >\r\n          <DialogTitle\r\n            className=\"projectDialog_title\"\r\n            onClose={() => setProjectDialog(false)}\r\n          >\r\n            {projectDialog.title}\r\n          </DialogTitle>\r\n          <img\r\n            src={projectDialog.image}\r\n            alt=\"\"\r\n            className=\"projectDialog_image\"\r\n          />\r\n          <DialogContent>\r\n            <Typography className=\"projectDialog_description\">\r\n              {projectDialog.description}\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions className=\"projectDialog_actions\">\r\n            {projectDialog?.links?.map((link) => (\r\n              <a\r\n                href={link.link}\r\n                target=\"_blank\"\r\n                className=\"projectDialog_icon\"\r\n              >\r\n                {link.icon}\r\n              </a>\r\n            ))}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Header\\Header.js",["66","67","68","69"],"import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { HomeRounded, Telegram } from \"@material-ui/icons\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport CustomButton from \"../Button/Button\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  const pathName = props?.location?.pathname;\r\n  return (\r\n    <Navbar expand=\"lg\" sticky=\"top\" className=\"header\">\r\n      {/* Home link */}\r\n      <Nav.Link as={NavLink} to=\"/\" className=\"header_navlink\">\r\n        <Navbar.Brand className=\"header_home\">\r\n          <HomeRounded />\r\n        </Navbar.Brand>\r\n      </Nav.Link>\r\n\r\n      <Navbar.Toggle />\r\n\r\n      <Navbar.Collapse>\r\n        <Nav className=\"header_left\">\r\n          {/* Resume Link */}\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to=\"/\"\r\n            className={pathName == \"/\" ? \"header_link_active\" : \"header_link\"}\r\n          >\r\n            Resume\r\n          </Nav.Link>\r\n\r\n          {/* Portfolio Link */}\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to=\"/portfolio\"\r\n            className={\r\n              pathName == \"/portfolio\" ? \"header_link_active\" : \"header_link\"\r\n            }\r\n          >\r\n            Portfolio\r\n          </Nav.Link>\r\n\r\n          {/* Contact Link */}\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to=\"/contact\"\r\n            className={\r\n              pathName == \"/contact\" ? \"header_link_active\" : \"header_link\"\r\n            }\r\n          >\r\n            Contact\r\n          </Nav.Link>\r\n        </Nav>\r\n        <div className=\"header_right\">\r\n          {Object.keys(resumeData.socials).map((key) => (\r\n            <a href={resumeData.socials[key].link} target=\"_blank\">\r\n              {resumeData.socials[key].icon}\r\n            </a>\r\n          ))}\r\n          <CustomButton text=\"Follow Me\" icon={<Telegram />} />\r\n        </div>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Button\\Button.js",[],"D:\\IT\\web\\reactjs\\portfolio\\src\\utils\\resumeData.js",["70"],"import React from \"react\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nexport default {\r\n  name: \"Huynh Minh Hoang\",\r\n  title: \"Web Developer\",\r\n  birthday: \"06 September 2000\",\r\n  email: \"hoanghuynh0609@gmail.com\",\r\n  address: \"District 9, HCM City\",\r\n  phone: \"039 8412 102\",\r\n\r\n  socials: {\r\n    GitHub: {\r\n      link: \"https://github.com/tonton69\",\r\n      text: \"TonTon69\",\r\n      icon: <GitHubIcon />,\r\n    },\r\n  },\r\n\r\n  about:\r\n    \"4 words always: \\nalways smile, always gentle, always understanding, always help.\\n \\nYou should message me if you are: \\nSexy, smart, fit and fun. I don’t think that’s too much to ask.\\n \\nMaxim live: \\nNever study to be successful, study for self efficiency. Don’t run behind success. Follow behind excellence, success will come all way behind you.\\n \\nI love to play chess and travel.\",\r\n  educations: [\r\n    {\r\n      title: \"Ho Chi Minh City University of Technology\",\r\n      date: \"2018 - Persent\",\r\n      description: \"Wish to graduate with excellence\",\r\n    },\r\n  ],\r\n  experences: [\r\n    {\r\n      title: \"Fashion Business - Asp.Net MVC\",\r\n      date: \"2020 - 2021\",\r\n      description:\r\n        \"Language used: Asp.Net MVC, SQL Server, Bootstrap 4. \\nHere is the demo link for my exercises using somee.com: \\nhttps://hhtfashion.somee.com/\",\r\n    },\r\n    {\r\n      title: \"Course Blog - Nodejs\",\r\n      date: \"2019 - 2020\",\r\n      description:\r\n        \"Language used: Handlebarsjs, Nodejs, Expressjs, MongoDB, Mongoose, Bootstrap 4. \\nHere is the demo link for my exercises using heroku.com: \\nhttps://tonton-blog.herokuapp.com/\",\r\n    },\r\n    {\r\n      title: \"Shopee Clone - HTML\",\r\n      date: \"2019\",\r\n      description:\r\n        \"Language used: HTML, CSS, JavaScript. \\nHere is the demo link for my exercises using surge.sh: \\nhttp://shopee-clone-html.surge.sh/\",\r\n    },\r\n  ],\r\n  skills: [\r\n    {\r\n      title: \"FRONT-END\",\r\n      description: [\"HTML-CSS-JS\", \"Bootstrap\", \"ReactJS\", \"Material UI\"],\r\n    },\r\n    {\r\n      title: \"BACK-END\",\r\n      description: [\"NodeJS\", \"ExpressJS\", \"Asp.Net MVC\", \"WordPress\"],\r\n    },\r\n    {\r\n      title: \"DATABASE\",\r\n      description: [\"Firebase\", \"MongoDB\", \"SQL Server\"],\r\n    },\r\n    {\r\n      title: \"SOURCE CONTROL\",\r\n      description: [\"Git\", \"GitHub\"],\r\n    },\r\n  ],\r\n  projects: [\r\n    {\r\n      tag: \"React\",\r\n      image:\r\n        \"https://img.freepik.com/free-photo/hand-painted-watercolor-background-with-sky-clouds-shape_24972-1095.jpg?size=626&ext=jpg\",\r\n      title: \"Setting Text Color\",\r\n      description: \"Language used: Reactjs\",\r\n      caption: \"Project setting text color\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/React-setting-text-color\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"Nodejs\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611240746/image-web/nodejs-blog_ya7fmb.jpg\",\r\n      title: \"Courses Blog\",\r\n      description:\r\n        \"Programming community.\\nLearn to code through hands-on learning with quality courses.\\nLanguage used: Handlebarsjs, Nodejs, Expressjs, MongoDB, Mongoose, Bootstrap 4\",\r\n      caption: \"Programming community\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/TonTon_Blog\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n        {\r\n          link: \"https://tonton-blog.herokuapp.com/\",\r\n          icon: <LanguageIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"Nodejs\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611245392/image-web/nodejs-book_rarrem.jpg\",\r\n      title: \"BookHouse\",\r\n      description:\r\n        \"Building book business website.\\nLanguage used: Pugjs, Nodejs, Expressjs, MongoDB, Mongoose, Bootstrap 4\",\r\n      caption: \"Building book business website\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/Books-Express\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"Asp.Net MVC\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611240746/image-web/fashion-aspnet_z7sc9y.jpg\",\r\n      title: \"Fashion Business\",\r\n      description:\r\n        \"Building fashion business website.\\nAsian fashion style.\\nLanguage used: Bootstrap 4, Asp.net MVC, SQL Server\",\r\n      caption: \"Building fashion business website\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/Web-ASP.NET-MVC\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n        {\r\n          link: \"https://hhtfashion.somee.com/\",\r\n          icon: <LanguageIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"Html\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611240747/image-web/shopee-html_tdwhee.jpg\",\r\n      title: \"Shopee Clone Html\",\r\n      description:\r\n        \"This is a static website, cloned shopee.\\nLanguage used: html-css-js\",\r\n      caption: \"Static fashion website\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/Shopee-clone-html\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n        {\r\n          link: \"http://shopee-clone-html.surge.sh/\",\r\n          icon: <LanguageIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"Html\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611241875/image-web/html-porflio_yjxwst.jpg\",\r\n      title: \"Porfolio\",\r\n      description:\r\n        \"This is a static website, my resume.\\nLanguage used: html-css-js\",\r\n      caption: \"Static porfolio website\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/Personal-web\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n        {\r\n          link: \"https://minhhoang6920.web.app/\",\r\n          icon: <LanguageIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"Html\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611240746/image-web/muzli-html_pta6mp.jpg\",\r\n      title: \"Muzli Clone Html\",\r\n      description: \"This is a static news website.\\nLanguage used: html-css-js\",\r\n      caption: \"Static news website\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/Muzli-clone\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n        {\r\n          link: \"http://muzli-clone-html.surge.sh/\",\r\n          icon: <LanguageIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"JavaScript\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611242730/image-web/from-validation_qp0js0.jpg\",\r\n      title: \"From Validation\",\r\n      description:\r\n        \"Check the validity of the user login and register.\\nLanguage used: html-css-js\",\r\n      caption: \"Test from\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/From-Validation\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"Designer\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611242594/image-web/ui-login_mtgopr.jpg\",\r\n      title: \"Login UI\",\r\n      description: \"Design from login.\\nLanguage used: html-css\",\r\n      caption: \"From login\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/Login-UI-Design\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"C-Sharp\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611242231/image-web/qlsv_t6quug.png\",\r\n      title: \"Student Score Management\",\r\n      description:\r\n        \"Student score management.\\nLanguage used: c#, entity framework\",\r\n      caption: \"Winform student management\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/QuanLySinhVien-Winform\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tag: \"C-Sharp\",\r\n      image:\r\n        \"https://res.cloudinary.com/din6v2it9/image/upload/v1611242306/image-web/qlfashion_ka7kml.jpg\",\r\n      title: \"Modern Fashion Business\",\r\n      description:\r\n        \"Fashion business software.\\nLanguage used: c#, entity framework\",\r\n      caption: \"Winform fashion business\",\r\n      links: [\r\n        {\r\n          link: \"https://github.com/TonTon69/Modern-Fashion-C-Sharp\",\r\n          icon: <GitHubIcon />,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","D:\\IT\\web\\reactjs\\portfolio\\src\\components\\Timeline\\Timeline.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":19,"column":11,"nodeType":"77","endLine":19,"endColumn":42},{"ruleId":"78","severity":1,"message":"79","line":41,"column":9,"nodeType":"77","endLine":41,"endColumn":74},{"ruleId":"80","severity":1,"message":"81","line":15,"column":11,"nodeType":"77","endLine":15,"endColumn":39},{"ruleId":"82","severity":1,"message":"83","line":46,"column":26,"nodeType":"84","messageId":"85","endLine":46,"endColumn":28},{"ruleId":"82","severity":1,"message":"83","line":55,"column":30,"nodeType":"84","messageId":"85","endLine":55,"endColumn":32},{"ruleId":"82","severity":1,"message":"83","line":69,"column":27,"nodeType":"84","messageId":"85","endLine":69,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":69,"column":54,"nodeType":"84","messageId":"85","endLine":69,"endColumn":56},{"ruleId":"75","severity":1,"message":"76","line":129,"column":15,"nodeType":"77","endLine":133,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":29,"column":33,"nodeType":"84","messageId":"85","endLine":29,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":39,"column":24,"nodeType":"84","messageId":"85","endLine":39,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":50,"column":24,"nodeType":"84","messageId":"85","endLine":50,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":58,"column":13,"nodeType":"77","endLine":58,"endColumn":68},{"ruleId":"86","severity":1,"message":"87","line":4,"column":1,"nodeType":"88","endLine":251,"endColumn":3},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]